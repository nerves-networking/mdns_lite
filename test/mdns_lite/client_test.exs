# SPDX-FileCopyrightText: 2021 Frank Hunleth
#
# SPDX-License-Identifier: Apache-2.0
#
defmodule MdnsLite.ClientTest do
  use ExUnit.Case

  alias MdnsLite.Client

  test "encoding a-record queries" do
    query = Client.query_a("nerves.local")

    assert Client.encode(query) ==
             <<0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x6E, 0x65, 0x72,
               0x76, 0x65, 0x73, 0x5, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x0, 0x0, 0x1, 0x0, 0x1>>

    # Unicast bit should be set - second last byte
    assert Client.encode(query, unicast: true) ==
             <<0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x6E, 0x65, 0x72,
               0x76, 0x65, 0x73, 0x5, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x0, 0x0, 0x1, 0x80, 0x1>>
  end

  test "encoding aaaa-record queries" do
    query = Client.query_aaaa("nerves.local")

    assert Client.encode(query) ==
             <<0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x6E, 0x65, 0x72,
               0x76, 0x65, 0x73, 0x5, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x0, 0x0, 0x1C, 0x0, 0x1>>

    # Unicast bit should be set - second last byte
    assert Client.encode(query, unicast: true) ==
             <<0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x6E, 0x65, 0x72,
               0x76, 0x65, 0x73, 0x5, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x0, 0x0, 0x1C, 0x80, 0x1>>
  end
end
